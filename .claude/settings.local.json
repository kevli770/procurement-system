{
  "permissions": {
    "allow": [
      "Bash(mkdir -p context/specs)",
      "Bash(git checkout -b feature/procurement-system-planning)",
      "Bash(git add context/specs/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd comprehensive planning documentation for Procurement System\n\nCreated detailed planning documents:\n- PRD.md: Product Requirements Document with user stories, features, and clarifications\n- SPEC.md: Technical Specification with architecture, database schema, API routes, and workflows\n- data-model.md: Detailed data model with entity relationships and validation rules\n- implementation-plan.md: Phased implementation plan with 10-week timeline and 2900+ tasks\n\nKey decisions:\n- Replace Clerk with NextAuth.js for local authentication\n- Use SQLite + Prisma for local database\n- SMTP configuration for email automation\n- Multi-level approval workflow (up to 4 levels)\n- Snapshot pattern for PO line items (historical data preservation)\n\nNext steps: Begin Phase 0 (Project Setup)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push -u origin feature/procurement-system-planning)",
      "Bash(mkdir -p design-docs/pages design-docs/shared-components)",
      "Bash(git add design-docs/)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitialize page builder workflow system\n\nCreated design-docs structure:\n- /design-docs/pages/ for page specifications\n- /design-docs/shared-components/ for shared component tracking\n\nThis infrastructure supports the page builder workflow where:\n1. AI analyzes project requirements and creates design docs\n2. AI determines Level 1/2 categories needed\n3. User browses kibo-ui.com/patterns to select Level 3 patterns\n4. AI installs selected patterns and builds pages\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "mcp__shadcn__get_project_registries",
      "mcp__shadcn__list_items_in_registries",
      "Bash(npm install prisma @prisma/client next-auth@beta bcryptjs winston date-fns nodemailer react-hook-form @hookform/resolvers zod @tanstack/react-query @react-pdf/renderer next-intl)",
      "Bash(npm install -D @types/bcryptjs @types/nodemailer prisma)",
      "Bash(npx prisma init --datasource-provider sqlite)",
      "Bash(cat .env)",
      "Bash(npx prisma generate)"
    ],
    "deny": [],
    "ask": []
  }
}
